name: Push Stable Docker Image
on:
  workflow_dispatch:
  release:
    types: [published]
env:
  IMAGE_NAME: ghcr.io/tomkerkhove/k8s-event-grid-bridge
  IMAGE_TAG: "${{ github.event.release.tag_name }}"
  NUGET_VERSION: "${{ github.event.release.tag_name }}"
  NUGET_PACKAGE_PATH: ./src/Kubernetes.EventGrid.Bridge.Contracts/bin/Release/Kubernetes.EventGrid.Bridge.Contracts.$NUGET_VERSION.nupkg
jobs:
  verify:
    name: Push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run Unit Tests
      run: dotnet test ./src/Kubernetes.EventGrid.Tests.Unit/Kubernetes.EventGrid.Tests.Unit.csproj --filter Category=Unit
  push_docker_to_ghcr:
    name: Push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest
    needs: [verify]
    steps:
    - uses: actions/checkout@v2
    - name: Docker Login
      uses: docker/login-action@v1.8.0
      with:
        registry: ghcr.io
        username: tomkerkhove
        password: ${{ secrets.CONTAINER_REGISTRY_KEY }}
    - name: Build the Docker image
      run: docker build ./src/ --file ./src/Kubernetes.EventGrid.Bridge.Host/Dockerfile --tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
    - name: Push the Docker image
      run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  push_nuget_to_ghpr:
    name: Push NuGet package to NuGet.org
    runs-on: ubuntu-latest
    needs: [verify]
    steps:
    - uses: actions/checkout@v2
    - name: Build Solution
      run: dotnet build ./src/Kubernetes.EventGrid.Bridge.sln --configuration Release -p:Version=${{ env.NUGET_VERSION}}
    - name: Push NuGet package
      run: dotnet nuget push "${{ env.NUGET_PACKAGE_PATH }}"  --api-key ${{ secrets.NUGET_REGISTRY_NUGETORG_APIKEY }} --source https://api.nuget.org/v3/index.json
    - name: Upload NuGet Package
      uses: actions/upload-artifact@v2
      with:
        name: NuGet
        path: ${{ env.NUGET_PACKAGE_PATH }}
