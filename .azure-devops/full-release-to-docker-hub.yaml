name: $(Date:yyyyMMdd)$(Rev:.r)
resources:
- repo: self
trigger: none
pr: none

pool:
  name: Hosted Ubuntu 1604
#Your build pipeline references an undefined variable named ‘DotNet.SDK.Version’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘Image.Version’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘Image.Version’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘Image.Version’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘Image.Version’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references an undefined variable named ‘Image.Name’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘Image.MajorMinorVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘Release.Title’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘Image.Version’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘Image.Version’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references an undefined variable named ‘Image.MajorMinorVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘Release.Title’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘Image.Version’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references an undefined variable named ‘Image.Name’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘Image.MajorMinorVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘Image.Name’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
variables:
  Image.TaggedName: '$(Image.Name):$(Image.Version)'
  Image.Version: '0.1.0'
  Release.TagName: '$(Build.BuildNumber)'
  Release.Title: 'v$(Image.Version)'

steps:
- task: DotNetCoreInstaller@0
  displayName: 'Install .NET SDK'
  inputs:
    version: '$(DotNet.SDK.Version)'

- powershell: |
   Write-Host "Determining '{major}.{minor}' for '$(Image.Version)'"
   
   $index = "$(Image.Version)".IndexOf(".", 2);
   
   $majorMinorVersion = "$(Image.Version)".Substring(0, $index);
   
   Write-Host "Found version '$majorMinorVersion'"
   Write-Output ("##vso[task.setvariable variable=Image.MajorMinorVersion;]$majorMinorVersion")
  displayName: 'Determine ''{major}.{minor}'' version'

- task: DotNetCoreCLI@2
  displayName: 'Run Unit Tests'
  inputs:
    command: test
    projects: src/Promitor.Scraper.Tests.Unit/Promitor.Scraper.Tests.Unit.csproj

- task: Docker@1
  displayName: 'Build Docker image'
  inputs:
    dockerFile: ./src/Promitor.Scraper.Host/Dockerfile
    arguments: '-t $(Image.Name):$(Image.MajorMinorVersion)'
    imageName: '$(Image.TaggedName)'
    includeLatestTag: true
    useDefaultContext: false
    buildContext: ./src/

- task: GitHubRelease@0
  displayName: 'Create GitHub Release'
  inputs:
    gitHubConnection: 'Tom Kerkhove (GitHub - OAuth)'
    repositoryName: tomkerkhove/k8s-event-bridge
    action: Create
    tagSource: manual
    tag: '$(Release.TagName)'
    title: '$(Release.Title)'
    releaseNotesSource: input
    releaseNotes: |
     ### Getting started
     Running Kubernetes Event Bridge is super easy:
     ```
     docker run -d -p 8999:80 --name k8s-event-bridge tomkerkhove/k8s-event-bridge:$(Image.Version)
     ```
     
     ### Docker Image information
     New Docker image tags are available:
     - `latest`
     - `$(Image.Version)`
     - `$(Image.MajorMinorVersion)`
     
     Docker image is available on [Docker Hub](https://hub.docker.com/r/tomkerkhove/k8s-event-bridge/).
     
     For more information about our tagging strategy, feel free to read our [documentation](https://k8s-event-bridge.tomkerkhove.be/deployment/#image-tagging-strategy).

- task: Docker@1
  displayName: 'Push ''{major}.{minor}.{patch}'' to Docker Hub'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Docker Hub'
    command: 'Push an image'
    imageName: '$(Image.TaggedName)'

- task: Docker@1
  displayName: 'Push ''{major}.{minor}'' to Docker Hub'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Docker Hub'
    command: 'Push an image'
    imageName: '$(Image.Name):$(Image.MajorMinorVersion)'

- task: Docker@1
  displayName: 'Push ''latest'' to Docker Hub'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Docker Hub'
    command: 'Push an image'
    imageName: '$(Image.Name):latest'

