name: $(Date:yyyyMMdd)$(Rev:.r)

variables:
  solution: 'src/Kubernetes.EventBridge.sln'
  buildConfiguration: 'Release'
  Image.TaggedName: '$(Image.Name):$(Build.BuildNumber)'
  Image.Name: tomkerkhove/k8s-event-bridge
  Image.Port: 8888

trigger:
- master

pr: 
- master

jobs:
- job: Build
  displayName: Verify Codebase & Tests
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Restore NuGet Packages'
    inputs:
      command: restore
      projects: '$(solution)'
  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      projects: '$(solution)'
      arguments: '--configuration $(buildConfiguration)'
- job: Docker
  displayName: Verify Docker Image
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - task: Docker@1
    displayName: 'Build Docker image'
    inputs:
      dockerFile: ./src/Kubernetes.EventBridge.Host/Dockerfile
      arguments: '-t $(Image.TaggedName)'
      useDefaultContext: false
      buildContext: ./src/
      imageName: '$(Image.TaggedName)'
  - task: Docker@1
    displayName: 'Run Docker image'
    inputs:
      command: 'Run an image'
      imageName: '$(Image.TaggedName)'
      ports: '$(Image.Port):80'
  - bash: |
      sleep 5
      curl -X GET "http://localhost:$(Image.Port)/api/v1/health" -H "accept: application/json" --include
    displayName: 'Ping Health endpoint'